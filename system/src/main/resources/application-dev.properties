# db conf
quarkus.datasource.devservices.enabled=true
quarkus.datasource.devservices.port=35432
quarkus.datasource.devservices.db-name=soybean-admin-backend
quarkus.datasource.devservices.username=soybean
quarkus.datasource.devservices.password=soybean@123.
#quarkus.datasource.devservices.init-script-path=sql/init.sql
quarkus.datasource.db-kind=postgresql
quarkus.datasource.reactive.cache-prepared-statements=true
quarkus.datasource.reactive.max-size=60
quarkus.datasource.reactive.additional-properties.application_name=soybean-admin-backend
# sign-redis conf
quarkus.redis.devservices.enabled=true
quarkus.redis.devservices.port=36379
# redis-stack bloom、graph、search、json支持
quarkus.redis.devservices.image-name=redis/redis-stack:latest
quarkus.redis.sign-redis.devservices.enabled=true
# Redisson 配置
quarkus.redisson.single-server-config.address=redis://localhost:${quarkus.redis.devservices.port}
quarkus.redisson.single-server-config.database=1
quarkus.redisson.threads=16
quarkus.redisson.netty-threads=32
# mongodb 配置
quarkus.mongodb.devservices.enabled=true
quarkus.mongodb.devservices.port=37017
#quarkus.mongodb.hosts=localhost:27017
quarkus.mongodb.database=events
# kafka 配置
quarkus.kafka.devservices.enabled=true
quarkus.kafka.devservices.port=39092
quarkus.kafka.devservices.provider=strimzi
quarkus.kafka.devservices.service-name=soybean-devservices-kafka
#mp.messaging.connector.smallrye-kafka.bootstrap.servers=localhost:9092
mp.messaging.outgoing.eventstore-out.connector=smallrye-kafka
mp.messaging.outgoing.eventstore-out.topic=eventstore
mp.messaging.outgoing.eventstore-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.eventstore-out.value.serializer=org.apache.kafka.common.serialization.ByteArraySerializer
mp.messaging.outgoing.eventstore-out.group.id=${quarkus.application.name:soybean-admin-backend}
mp.messaging.outgoing.eventstore-out.enable.auto.commit=false
mp.messaging.incoming.eventstore-in.connector=smallrye-kafka
mp.messaging.incoming.eventstore-in.topic=eventstore
mp.messaging.incoming.eventstore-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.eventstore-in.value.deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer